apply plugin: 'com.android.library'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: "de.mannodermaus.android-junit5"

buildscript {
  repositories {
    mavenCentral()
    gradlePluginPortal()
    google()
    jcenter {
      content {
        includeGroup 'de.mannodermaus.junit5'
        includeGroup 'de.mannodermaus.gradle.plugins'
        includeGroup 'com.github.zafarkhaja'
      }
    }
  }

  dependencies {
    classpath "de.mannodermaus.gradle.plugins:android-junit5:1.6.2.0"
  }
}

repositories {
  jcenter {
    // Required for a dependency of Android lint.
    content {
      includeGroup 'org.jetbrains.trove4j'
      includeGroup 'de.mannodermaus.junit5'
    }
  }
}

def isIDE = properties.containsKey('android.injected.invoked.from.ide') ||
        (System.getenv("XPC_SERVICE_NAME") ?: "").contains("intellij") ||
        System.getenv("IDEA_INITIAL_DIRECTORY") != null

android {
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  packagingOptions {
    // issue merging due to conflict with httpclient and something else
    exclude("META-INF/DEPENDENCIES")
    exclude("META-INF/LICENSE.md")
    exclude("META-INF/LICENSE-notice.md")
    exclude("README.txt")
    exclude("org/bouncycastle/LICENSE")
  }

  compileSdkVersion 30

  defaultConfig {
    minSdkVersion 21
    targetSdkVersion 30
    versionCode 1
    versionName "1.0"

    // Make sure to use the AndroidJUnitRunner (or a sub-class) in order to hook in the JUnit 5 Test Builder
    testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    testInstrumentationRunnerArguments([
            'runnerBuilder': 'de.mannodermaus.junit5.AndroidJUnit5Builder',
            'notPackage': 'org.bouncycastle'
    ])
  }

  if (!isIDE) {
    sourceSets {
      named("androidTest") {
        it.java.srcDirs += project.file("../okhttp-brotli/src/test/java")
        it.java.srcDirs += project.file("../okhttp-dnsoverhttps/src/test/java")
        it.java.srcDirs += project.file("../okhttp-logging-interceptor/src/test/java")
        it.java.srcDirs += project.file("../okhttp-sse/src/test/java")
      }
    }
  }
}

dependencies {
  api "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${versions.kotlin}"
  api "org.jetbrains.kotlin:kotlin-reflect:${versions.kotlin}"
  implementation 'com.google.android.gms:play-services-safetynet:17.0.0'
  api project(':okhttp')

  androidTestImplementation(project(':okhttp-testing-support')) {
    exclude group: 'org.openjsse', module: 'openjsse'
    exclude group: 'org.conscrypt', module: 'conscrypt-openjdk-uber'
    exclude group: 'software.amazon.cryptools', module: 'AmazonCorrettoCryptoProvider'
  }
  androidTestImplementation "org.bouncycastle:bcprov-jdk15to18:${versions.bouncycastle}"
  androidTestImplementation "org.bouncycastle:bctls-jdk15to18:${versions.bouncycastle}"
  androidTestImplementation "org.conscrypt:conscrypt-android:2.5.1"
  androidTestImplementation project(':mockwebserver-junit5')
  androidTestImplementation project(':okhttp-brotli')
  androidTestImplementation project(':okhttp-dnsoverhttps')
  androidTestImplementation project(':okhttp-logging-interceptor')
  androidTestImplementation project(':okhttp-sse')
  androidTestImplementation project(':okhttp-testing-support')
  androidTestImplementation project(':okhttp-tls')
  androidTestImplementation 'androidx.test.ext:junit:1.1.2'
  androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
  androidTestImplementation 'org.apache.httpcomponents.client5:httpclient5:5.0'
  androidTestImplementation 'com.squareup.moshi:moshi:1.11.0'
  androidTestImplementation 'com.squareup.moshi:moshi-kotlin:1.11.0'

  androidTestImplementation "androidx.test:runner:1.3.0"
  androidTestImplementation "org.junit.jupiter:junit-jupiter-api:5.7.0"
  androidTestImplementation "de.mannodermaus.junit5:android-test-core:1.2.0"
  androidTestRuntimeOnly "de.mannodermaus.junit5:android-test-runner:1.2.0"
}
