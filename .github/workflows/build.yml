name: build

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]

env:
  GRADLE_OPTS: "-Dorg.gradle.jvmargs=-Xmx4g -Dorg.gradle.daemon=false -Dkotlin.incremental=false"

jobs:
  publish:
    runs-on: ubuntu-latest
    if: github.repository == 'square/okhttp' && github.ref == 'refs/heads/master'

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Upload Artifacts
        run: |
          ./gradlew clean publish --stacktrace
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_NEXUS_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_NEXUS_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ARTIFACT_SIGNING_PRIVATE_KEY }}

  validation:
    name: "Validation"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: gradle/wrapper-validation-action@v1

  checkjdk11:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew check -x test

  testopenjdk11:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=11

      - name: Publish Test Report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  testjs:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jsTest

      - name: Publish Test Report
        if: success() || failure()
        uses: mikepenz/action-junit-report@v2
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'

  testzulu11:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'zulu')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=11

  testopenjdk8:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'jdk8')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=8

  testopenjdk8alpn:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'jdk8')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install Old JDK 8
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 8.0.242

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=8 -Dokhttp.platform=jdk8alpn -Dalpn.boot.version=8.1.13.v20181017 -Dorg.gradle.java.installations.paths=/opt/hostedtoolcache/Java_Adopt_jdk/8.0.242-8.1/x64

  testopenjsse:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'providers')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=8 -Dokhttp.platform=openjsse

  testconscrypt:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'providers')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dokhttp.platform=conscrypt

  testbouncycastle:
    runs-on: ubuntu-latest
    if: contains(github.event.pull_request.labels.*.name, 'providers')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dokhttp.platform=bouncycastle

  testcorretto:
    runs-on: ubuntu-latest
    # TODO add master build after fixing all tests in CI
    if: contains(github.event.pull_request.labels.*.name, 'providers')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dokhttp.platform=corretto

  testopenjdk17:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'jdk17')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Run Checks
        run: ./gradlew jvmTest -Dtest.java.version=17

  testwindows:
    runs-on: windows-latest
    # TODO add master build after fixing all tests in CI
    if: contains(github.event.pull_request.labels.*.name, 'windows')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Test
        run: |
          ./gradlew jvmTest

  testgraal:
    runs-on: ubuntu-latest
    # TODO add master build after fixing all tests in CI
    if: contains(github.event.pull_request.labels.*.name, 'graal')

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: Build okcurl
        run: ./gradlew okcurl:nativeImage

      - name: Build ConsoleLauncher
        run: ./gradlew -PgraalBuild native-image-tests:nativeImage

      - name: Run Checks
        run: ./native-image-tests/build/graal/ConsoleLauncher

  testandroid:
    runs-on: macos-latest
    timeout-minutes: 30
    if: github.ref == 'refs/heads/master' || contains(github.event.pull_request.labels.*.name, 'android')

    strategy:
      fail-fast: false
      matrix:
        api-level:
          - 21
          - 29

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: ./gradlew -PandroidBuild :android-test:connectedCheck
        env:
          API_LEVEL: ${{ matrix.api-level }}


  testandroidregression:
    runs-on: macos-latest
    timeout-minutes: 10
    if: contains(github.event.pull_request.labels.*.name, 'android-regression')

    strategy:
      fail-fast: false
      matrix:
        api-level:
          - 29

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Configure JDK
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: 11

      - uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/**.gradle.kts', '**/gradle/wrapper/gradle-wrapper.properties', '**/libs.versions.toml') }}

      - name: AVD cache
        uses: actions/cache@v2
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-${{ matrix.api-level }}

      - name: Create AVD and generate snapshot for caching
        if: steps.avd-cache.outputs.cache-hit != 'true'
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          force-avd-creation: false
          emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
          disable-animations: false
          script: echo "Generated AVD snapshot for caching."

      - name: Run Tests
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: ${{ matrix.api-level }}
          script: ./gradlew -PandroidBuild :regression-test:connectedCheck
        env:
          API_LEVEL: ${{ matrix.api-level }}
