public abstract interface class okhttp3/sse/EventSource {
	public static final field Companion Lokhttp3/sse/EventSource$Companion;
	public abstract fun cancel ()V
	public static fun create (Lokhttp3/Call;Lokhttp3/sse/EventSourceListener;)Lokhttp3/sse/EventSource;
	public static fun process (Lokhttp3/Response;Lokhttp3/sse/EventSourceListener;)V
	public abstract fun request ()Lokhttp3/Request;
}

public final class okhttp3/sse/EventSource$Companion {
	public final fun create (Lokhttp3/Call;Lokhttp3/sse/EventSourceListener;)Lokhttp3/sse/EventSource;
	public final fun process (Lokhttp3/Response;Lokhttp3/sse/EventSourceListener;)V
}

public abstract interface class okhttp3/sse/EventSource$Factory {
	public static final field Companion Lokhttp3/sse/EventSource$Factory$Companion;
	public static fun create (Lokhttp3/Call$Factory;)Lokhttp3/sse/EventSource$Factory;
	public abstract fun newEventSource (Lokhttp3/Request;Lokhttp3/sse/EventSourceListener;)Lokhttp3/sse/EventSource;
}

public final class okhttp3/sse/EventSource$Factory$Companion {
	public final fun create (Lokhttp3/Call$Factory;)Lokhttp3/sse/EventSource$Factory;
}

public abstract class okhttp3/sse/EventSourceListener {
	public fun <init> ()V
	public fun onClosed (Lokhttp3/sse/EventSource;)V
	public fun onEvent (Lokhttp3/sse/EventSource;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V
	public fun onFailure (Lokhttp3/sse/EventSource;Ljava/lang/Throwable;Lokhttp3/Response;)V
	public fun onOpen (Lokhttp3/sse/EventSource;Lokhttp3/Response;)V
}

public final class okhttp3/sse/EventSources {
	public static final field INSTANCE Lokhttp3/sse/EventSources;
	public static final fun createFactory (Lokhttp3/Call$Factory;)Lokhttp3/sse/EventSource$Factory;
	public static final synthetic fun createFactory (Lokhttp3/OkHttpClient;)Lokhttp3/sse/EventSource$Factory;
	public static final fun processResponse (Lokhttp3/Response;Lokhttp3/sse/EventSourceListener;)V
}

