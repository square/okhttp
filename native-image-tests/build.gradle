plugins {
  id "com.palantir.graal" version "0.7.1"
}

dependencies {
  implementation deps.assertj
  implementation deps.junit5Api
  implementation deps.junit5JupiterEngine
  implementation deps.junitPlatformConsole

  compileOnly deps.jsr305
}

animalsniffer {
  ignoreFailures = true
}

def graalHome = "/Library/Java/JavaVirtualMachines/graalvm-ce-java11-20.2.0/Contents/Home"
def graalvmResources = project.file("$buildDir/graalvm/resources")
def graalvmConfig = project.file("$graalvmResources/META-INF/native-image")
graalvmConfig.mkdirs()

sourceSets {
  main.resources.srcDirs += graalvmResources
}

task seedGraalvmConfig(type: Exec) {
  dependsOn("classes")
  commandLine(
    "$graalHome/bin/java",
    "-agentlib:native-image-agent=config-output-dir=$graalvmConfig",
    "-classpath", sourceSets.main.runtimeClasspath.getAsPath(),
    "org.junit.platform.console.ConsoleLauncher",
    "--select-class", "okhttp3.SampleTest"
  )
}

graal {
  mainClass "org.junit.platform.console.ConsoleLauncher"
  outputName "ConsoleLauncher"
  graalVersion "20.2.0"
  javaVersion "11"

  option "--enable-https"
  option "--no-fallback"
  option "--allow-incomplete-classpath"
  option "--report-unsupported-elements-at-runtime"
}
