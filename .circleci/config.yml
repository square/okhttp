version: 2.1

commands:
  runtests:
    description: "Run tests"
    parameters:
      platform:
        type: string
    steps:
      - restore_cache:
          keys:
            # restore compilation and wrapper from previous branch/job build or master
            - v4-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
            - v4-master-compile

      - run:
          name: Run tests
          command: ./gradlew --build-cache --parallel --continue test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dokhttp.platform=<< parameters.platform >> -Dorg.gradle.workers.max=3 -Xmx1G

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v4-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}
          when: always

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          name: Store test results
          path: ~/test-results

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

jobs:
  compile:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - run:
          name: Compile
          command: ./gradlew --parallel --build-cache downloadDependencies testClasses
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx768m

      - run:
          name: Run tests
          command: ./gradlew --parallel --build-cache test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx1G

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          # Under normal usage, saves compiled results from master at least once a day
          key: v4-{{ .Branch }}-{{ .Environment.CIRCLE_JOB }}-{{ epoch }}

  checkjdk8:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            # restore compilation and wrapper from master build
            - v4-master-compile

      - run:
          name: Run checks
          command: ./gradlew --parallel --continue --build-cache check -x test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx1G

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

  testjdk8:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - runtests:
          platform: jdk8

  testjdk8alpn:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - runtests:
          platform: jdk8alpn

  testjdk11:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - runtests:
          platform: jdk9

  testconscrypt:
    docker:
      - image: circleci/openjdk:11.0.3-jdk-stretch

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - runtests:
          platform: conscrypt

workflows:
  version: 2
  commit:
    jobs:
      - compile:
          filters:
            branches:
              only: master
      - checkjdk8:
          filters:
            branches:
              ignore: master
      - testjdk8:
          filters:
            branches:
              only: master
      - testjdk8alpn
      - testjdk11:
          filters:
            branches:
              only: master
      - testconscrypt:
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "4 1 * * *"
          filters:
            branches:
              only: master
    jobs:
      - compile
      - checkjdk8:
          requires:
            - compile
      - testjdk8:
          requires:
            - compile
      - testjdk8alpn:
          requires:
            - compile
      - testjdk11:
          requires:
            - compile
      - testconscrypt:
          requires:
            - compile
