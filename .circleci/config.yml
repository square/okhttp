# Check https://circleci.com/docs/2.0/language-java/ for more details
version: 2.1
jobs:
  compile:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx768m
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}
            - v3-{{ checksum "build.gradle" }}-master
            - v3-{{ checksum "build.gradle" }}

      - run:
          name: Compile
          command: ./gradlew --parallel --build-cache downloadDependencies testClasses
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx768m

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v3-{{ checksum "build.gradle" }}-{{ .Branch }}

  checkjdk8:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}
            - v3-{{ checksum "build.gradle" }}-master
            - v3-{{ checksum "build.gradle" }}

      - run:
          name: Run checks
          command: ./gradlew --parallel --build-cache check -x test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx1G

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

  testjdk8:
    docker:
      - image: circleci/openjdk:8u171-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testjdk8
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}
            - v3-{{ checksum "build.gradle" }}-master
            - v3-{{ checksum "build.gradle" }}

      - run:
          name: Run tests
          command: ./gradlew --parallel --build-cache test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dorg.gradle.workers.max=3 -Xmx1G

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testjdk8

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          name: Store test results
          path: ~/test-results

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

  testjdk11:
    docker:
      - image: circleci/openjdk:11.0.2-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testjdk11
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}
            - v3-{{ checksum "build.gradle" }}-master
            - v3-{{ checksum "build.gradle" }}

      - run:
          name: Run tests
          command: ./gradlew --build-cache --parallel test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dokhttp.platform=jdk9 -Dorg.gradle.workers.max=3 -Xmx1G

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testjdk11

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          name: Store test results
          path: ~/test-results

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

  testconscrypt:
    docker:
      - image: circleci/openjdk:11.0.2-jdk

    environment:
      JVM_OPTS: -Xmx1g
      TERM: dumb

    steps:
      - checkout

      - restore_cache:
          keys:
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testconscrypt
            - v3-{{ checksum "build.gradle" }}-{{ .Branch }}
            - v3-{{ checksum "build.gradle" }}-master
            - v3-{{ checksum "build.gradle" }}

      - run:
          name: Run tests
          command: ./gradlew --build-cache --parallel test
          environment:
            GRADLE_OPTS: -Dorg.gradle.daemon=false -Dokhttp.platform=conscrypt -Dorg.gradle.workers.max=3 -Xmx1G

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper
          key: v3-{{ checksum "build.gradle" }}-{{ .Branch }}-testconscrypt

      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/build/test-results/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always

      - store_test_results:
          name: Store test results
          path: ~/test-results

      - run:
          name: Save gradle reports
          command: |
            mkdir -p ~/reports/
            tar cf - */build/reports | (cd ~/reports/; tar xf -)
          when: always

      - store_artifacts:
          name: Store gradle reports
          path: ~/reports

workflows:
  version: 2
  commit:
    jobs:
      - compile
      - checkjdk8:
          requires:
            - compile
          filters:
            branches:
              ignore: master
      - testjdk8:
          requires:
            - compile
      - testjdk11:
          requires:
            - compile
          filters:
            branches:
              only: master
      - testconscrypt:
          requires:
            - compile
          filters:
            branches:
              only: master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only: master
    jobs:
      - compile
      - checkjdk8:
          requires:
            - compile
      - testjdk8:
          requires:
            - compile
      - testjdk11:
          requires:
            - compile
      - testconscrypt:
          requires:
            - compile