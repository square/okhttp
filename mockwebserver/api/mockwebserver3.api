public abstract class mockwebserver3/Dispatcher : java/io/Closeable {
	public fun <init> ()V
	public fun close ()V
	public abstract fun dispatch (Lmockwebserver3/RecordedRequest;)Lmockwebserver3/MockResponse;
	public fun peek ()Lmockwebserver3/MockResponse;
}

public final class mockwebserver3/MockResponse {
	public fun <init> (ILokhttp3/Headers;Ljava/lang/String;)V
	public synthetic fun <init> (ILokhttp3/Headers;Ljava/lang/String;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public synthetic fun <init> (Lmockwebserver3/MockResponse$Builder;Lkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBody ()Lmockwebserver3/MockResponseBody;
	public final fun getBodyDelayNanos ()J
	public final fun getCode ()I
	public final fun getDoNotReadRequestBody ()Z
	public final fun getFailHandshake ()Z
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getHeadersDelayNanos ()J
	public final fun getInTunnel ()Z
	public final fun getInformationalResponses ()Ljava/util/List;
	public final fun getMessage ()Ljava/lang/String;
	public final fun getOnRequestBody ()Lmockwebserver3/SocketEffect;
	public final fun getOnRequestStart ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseBody ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseEnd ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseStart ()Lmockwebserver3/SocketEffect;
	public final fun getPushPromises ()Ljava/util/List;
	public final fun getSettings ()Lokhttp3/internal/http2/Settings;
	public final fun getShutdownServer ()Z
	public final fun getSocketHandler ()Lmockwebserver3/SocketHandler;
	public final fun getStatus ()Ljava/lang/String;
	public final fun getThrottleBytesPerPeriod ()J
	public final fun getThrottlePeriodNanos ()J
	public final fun getTrailers ()Lokhttp3/Headers;
	public final fun getTrailersDelayNanos ()J
	public final fun getWebSocketListener ()Lokhttp3/WebSocketListener;
	public final fun newBuilder ()Lmockwebserver3/MockResponse$Builder;
	public fun toString ()Ljava/lang/String;
}

public final class mockwebserver3/MockResponse$Builder : java/lang/Cloneable {
	public fun <init> ()V
	public final fun add100Continue ()Lmockwebserver3/MockResponse$Builder;
	public final fun addHeader (Ljava/lang/String;)Lmockwebserver3/MockResponse$Builder;
	public final fun addHeader (Ljava/lang/String;Ljava/lang/Object;)Lmockwebserver3/MockResponse$Builder;
	public final fun addHeaderLenient (Ljava/lang/String;Ljava/lang/Object;)Lmockwebserver3/MockResponse$Builder;
	public final fun addInformationalResponse (Lmockwebserver3/MockResponse;)Lmockwebserver3/MockResponse$Builder;
	public final fun addPush (Lmockwebserver3/PushPromise;)Lmockwebserver3/MockResponse$Builder;
	public final fun body (Ljava/lang/String;)Lmockwebserver3/MockResponse$Builder;
	public final fun body (Lmockwebserver3/MockResponseBody;)Lmockwebserver3/MockResponse$Builder;
	public final fun body (Lokio/Buffer;)Lmockwebserver3/MockResponse$Builder;
	public final fun bodyDelay (JLjava/util/concurrent/TimeUnit;)Lmockwebserver3/MockResponse$Builder;
	public final fun build ()Lmockwebserver3/MockResponse;
	public final fun chunkedBody (Ljava/lang/String;I)Lmockwebserver3/MockResponse$Builder;
	public final fun chunkedBody (Lokio/Buffer;I)Lmockwebserver3/MockResponse$Builder;
	public static synthetic fun chunkedBody$default (Lmockwebserver3/MockResponse$Builder;Ljava/lang/String;IILjava/lang/Object;)Lmockwebserver3/MockResponse$Builder;
	public static synthetic fun chunkedBody$default (Lmockwebserver3/MockResponse$Builder;Lokio/Buffer;IILjava/lang/Object;)Lmockwebserver3/MockResponse$Builder;
	public final fun clearHeaders ()Lmockwebserver3/MockResponse$Builder;
	public synthetic fun clone ()Ljava/lang/Object;
	public fun clone ()Lmockwebserver3/MockResponse$Builder;
	public final fun code (I)Lmockwebserver3/MockResponse$Builder;
	public final fun doNotReadRequestBody ()Lmockwebserver3/MockResponse$Builder;
	public final fun failHandshake ()Lmockwebserver3/MockResponse$Builder;
	public final fun getBody ()Lmockwebserver3/MockResponseBody;
	public final fun getBodyDelayNanos ()J
	public final fun getCode ()I
	public final fun getDoNotReadRequestBody ()Z
	public final fun getFailHandshake ()Z
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getHeadersDelayNanos ()J
	public final fun getInTunnel ()Z
	public final fun getInformationalResponses ()Ljava/util/List;
	public final fun getOnRequestBody ()Lmockwebserver3/SocketEffect;
	public final fun getOnRequestStart ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseBody ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseEnd ()Lmockwebserver3/SocketEffect;
	public final fun getOnResponseStart ()Lmockwebserver3/SocketEffect;
	public final fun getPushPromises ()Ljava/util/List;
	public final fun getSettings ()Lokhttp3/internal/http2/Settings;
	public final fun getShutdownServer ()Z
	public final fun getSocketHandler ()Lmockwebserver3/SocketHandler;
	public final fun getStatus ()Ljava/lang/String;
	public final fun getThrottleBytesPerPeriod ()J
	public final fun getThrottlePeriodNanos ()J
	public final fun getTrailers ()Lokhttp3/Headers;
	public final fun getTrailersDelayNanos ()J
	public final fun getWebSocketListener ()Lokhttp3/WebSocketListener;
	public final fun headers (Lokhttp3/Headers;)Lmockwebserver3/MockResponse$Builder;
	public final fun headersDelay (JLjava/util/concurrent/TimeUnit;)Lmockwebserver3/MockResponse$Builder;
	public final fun inTunnel ()Lmockwebserver3/MockResponse$Builder;
	public final fun onRequestBody (Lmockwebserver3/SocketEffect;)Lmockwebserver3/MockResponse$Builder;
	public final fun onRequestStart (Lmockwebserver3/SocketEffect;)Lmockwebserver3/MockResponse$Builder;
	public final fun onResponseBody (Lmockwebserver3/SocketEffect;)Lmockwebserver3/MockResponse$Builder;
	public final fun onResponseEnd (Lmockwebserver3/SocketEffect;)Lmockwebserver3/MockResponse$Builder;
	public final fun onResponseStart (Lmockwebserver3/SocketEffect;)Lmockwebserver3/MockResponse$Builder;
	public final fun removeHeader (Ljava/lang/String;)Lmockwebserver3/MockResponse$Builder;
	public final fun setHeader (Ljava/lang/String;Ljava/lang/Object;)Lmockwebserver3/MockResponse$Builder;
	public final fun settings (Lokhttp3/internal/http2/Settings;)Lmockwebserver3/MockResponse$Builder;
	public final fun shutdownServer (Z)Lmockwebserver3/MockResponse$Builder;
	public final fun socketHandler (Lmockwebserver3/SocketHandler;)Lmockwebserver3/MockResponse$Builder;
	public final fun status (Ljava/lang/String;)Lmockwebserver3/MockResponse$Builder;
	public final fun throttleBody (JJLjava/util/concurrent/TimeUnit;)Lmockwebserver3/MockResponse$Builder;
	public final fun trailers (Lokhttp3/Headers;)Lmockwebserver3/MockResponse$Builder;
	public final fun trailersDelay (JLjava/util/concurrent/TimeUnit;)Lmockwebserver3/MockResponse$Builder;
	public final fun webSocketUpgrade (Lokhttp3/WebSocketListener;)Lmockwebserver3/MockResponse$Builder;
}

public abstract interface class mockwebserver3/MockResponseBody {
	public abstract fun getContentLength ()J
	public abstract fun writeTo (Lokio/BufferedSink;)V
}

public final class mockwebserver3/MockWebServer : java/io/Closeable {
	public fun <init> ()V
	public fun close ()V
	public final fun enqueue (Lmockwebserver3/MockResponse;)V
	public final fun getBodyLimit ()J
	public final fun getDispatcher ()Lmockwebserver3/Dispatcher;
	public final fun getHostName ()Ljava/lang/String;
	public final fun getPort ()I
	public final fun getProtocolNegotiationEnabled ()Z
	public final fun getProtocols ()Ljava/util/List;
	public final fun getProxyAddress ()Ljava/net/Proxy;
	public final fun getRequestCount ()I
	public final fun getServerSocketFactory ()Ljavax/net/ServerSocketFactory;
	public final fun getSocketAddress ()Ljava/net/InetSocketAddress;
	public final fun getStarted ()Z
	public final fun noClientAuth ()V
	public final fun requestClientAuth ()V
	public final fun requireClientAuth ()V
	public final fun setBodyLimit (J)V
	public final fun setDispatcher (Lmockwebserver3/Dispatcher;)V
	public final fun setProtocolNegotiationEnabled (Z)V
	public final fun setProtocols (Ljava/util/List;)V
	public final fun setServerSocketFactory (Ljavax/net/ServerSocketFactory;)V
	public final fun start ()V
	public final fun start (I)V
	public final fun start (Ljava/net/InetAddress;I)V
	public static synthetic fun start$default (Lmockwebserver3/MockWebServer;IILjava/lang/Object;)V
	public final fun takeRequest ()Lmockwebserver3/RecordedRequest;
	public final fun takeRequest (JLjava/util/concurrent/TimeUnit;)Lmockwebserver3/RecordedRequest;
	public fun toString ()Ljava/lang/String;
	public final fun url (Ljava/lang/String;)Lokhttp3/HttpUrl;
	public final fun useHttps (Ljavax/net/ssl/SSLSocketFactory;)V
}

public final class mockwebserver3/PushPromise {
	public fun <init> (Ljava/lang/String;Ljava/lang/String;Lokhttp3/Headers;Lmockwebserver3/MockResponse;)V
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getMethod ()Ljava/lang/String;
	public final fun getPath ()Ljava/lang/String;
	public final fun getResponse ()Lmockwebserver3/MockResponse;
}

public class mockwebserver3/QueueDispatcher : mockwebserver3/Dispatcher {
	public fun <init> ()V
	public fun clear ()V
	public fun close ()V
	public fun dispatch (Lmockwebserver3/RecordedRequest;)Lmockwebserver3/MockResponse;
	public fun enqueue (Lmockwebserver3/MockResponse;)V
	protected final fun getResponseQueue ()Ljava/util/concurrent/BlockingQueue;
	public fun peek ()Lmockwebserver3/MockResponse;
	public fun setFailFast (Lmockwebserver3/MockResponse;)V
	public fun setFailFast (Z)V
}

public final class mockwebserver3/RecordedRequest {
	public fun <init> (IILokhttp3/Handshake;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokhttp3/HttpUrl;Lokhttp3/Headers;Lokio/ByteString;JLjava/util/List;Ljava/io/IOException;)V
	public synthetic fun <init> (IILokhttp3/Handshake;Ljava/util/List;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Lokhttp3/HttpUrl;Lokhttp3/Headers;Lokio/ByteString;JLjava/util/List;Ljava/io/IOException;ILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getBody ()Lokio/ByteString;
	public final fun getBodySize ()J
	public final fun getChunkSizes ()Ljava/util/List;
	public final fun getConnectionIndex ()I
	public final fun getExchangeIndex ()I
	public final fun getFailure ()Ljava/io/IOException;
	public final fun getHandshake ()Lokhttp3/Handshake;
	public final fun getHandshakeServerNames ()Ljava/util/List;
	public final fun getHeaders ()Lokhttp3/Headers;
	public final fun getMethod ()Ljava/lang/String;
	public final fun getRequestLine ()Ljava/lang/String;
	public final fun getTarget ()Ljava/lang/String;
	public final fun getUrl ()Lokhttp3/HttpUrl;
	public final fun getVersion ()Ljava/lang/String;
	public fun toString ()Ljava/lang/String;
}

public abstract interface class mockwebserver3/SocketEffect {
}

public final class mockwebserver3/SocketEffect$CloseSocket : mockwebserver3/SocketEffect {
	public fun <init> ()V
	public fun <init> (ZZZ)V
	public synthetic fun <init> (ZZZILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getCloseSocket ()Z
	public final fun getShutdownInput ()Z
	public final fun getShutdownOutput ()Z
}

public final class mockwebserver3/SocketEffect$CloseStream : mockwebserver3/SocketEffect {
	public fun <init> ()V
	public fun <init> (I)V
	public synthetic fun <init> (IILkotlin/jvm/internal/DefaultConstructorMarker;)V
	public final fun getHttp2ErrorCode ()I
}

public final class mockwebserver3/SocketEffect$ShutdownConnection : mockwebserver3/SocketEffect {
	public static final field INSTANCE Lmockwebserver3/SocketEffect$ShutdownConnection;
}

public final class mockwebserver3/SocketEffect$Stall : mockwebserver3/SocketEffect {
	public static final field INSTANCE Lmockwebserver3/SocketEffect$Stall;
}

public abstract interface class mockwebserver3/SocketHandler {
	public abstract fun handle (Lokio/Socket;)V
}

