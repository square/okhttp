public final class okhttp3/dnsoverhttps/DnsOverHttps : okhttp3/Dns {
	public static final field Companion Lokhttp3/dnsoverhttps/DnsOverHttps$Companion;
	public static final field MAX_RESPONSE_SIZE I
	public final fun client ()Lokhttp3/OkHttpClient;
	public final fun includeIPv6 ()Z
	public fun lookup (Ljava/lang/String;)Ljava/util/List;
	public final fun post ()Z
	public final fun resolvePrivateAddresses ()Z
	public final fun resolvePublicAddresses ()Z
	public final fun url ()Lokhttp3/HttpUrl;
}

public final class okhttp3/dnsoverhttps/DnsOverHttps$Builder {
	public fun <init> ()V
	public final fun bootstrapDnsHosts (Ljava/util/List;)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun bootstrapDnsHosts ([Ljava/net/InetAddress;)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun build ()Lokhttp3/dnsoverhttps/DnsOverHttps;
	public final fun client (Lokhttp3/OkHttpClient;)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun includeIPv6 (Z)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun post (Z)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun resolvePrivateAddresses (Z)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun resolvePublicAddresses (Z)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun systemDns (Lokhttp3/Dns;)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
	public final fun url (Lokhttp3/HttpUrl;)Lokhttp3/dnsoverhttps/DnsOverHttps$Builder;
}

public final class okhttp3/dnsoverhttps/DnsOverHttps$Companion {
	public final fun getDNS_MESSAGE ()Lokhttp3/MediaType;
}

